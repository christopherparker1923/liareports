// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider     = "mysql"
  // NOTE: When using postgresql, mysql or sqlserver, uncomment the @db.Text annotations in model Account below
  // Further reading:
  // https://next-auth.js.org/adapters/prisma#create-the-prisma-schema
  // https://www.prisma.io/docs/reference/api-reference/prisma-schema-reference#string
  url          = env("DATABASE_URL")
  relationMode = "prisma"
}

model Example {
  id        String   @id @default(cuid())
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

// Necessary for Next auth
model Account {
  id                String  @id @default(cuid())
  userId            String
  type              String
  provider          String
  providerAccountId String
  refresh_token     String? @db.Text
  access_token      String? @db.Text
  expires_at        Int?
  token_type        String?
  scope             String?
  id_token          String? @db.Text
  session_state     String?
  user              User    @relation(fields: [userId], references: [id], onDelete: Cascade)
  ext_expires_in    Int?

  @@unique([provider, providerAccountId])
}

model Session {
  id           String   @id @default(cuid())
  sessionToken String   @unique
  userId       String
  expires      DateTime
  user         User     @relation(fields: [userId], references: [id], onDelete: Cascade)
}

model User {
  id            String    @id @default(cuid())
  name          String?
  email         String?   @unique
  emailVerified DateTime?
  image         String?
  accounts      Account[]
  sessions      Session[]
}

model VerificationToken {
  identifier String
  token      String   @unique
  expires    DateTime

  @@unique([identifier, token])
}

model ManufacturerPart {
  id             String        @id @default(cuid())
  createdAt      DateTime      @default(now())
  updatedAt      DateTime      @updatedAt
  partNumber     String
  partType       PartType
  length         Float
  width          Float
  height         Float
  CSACert        Boolean
  ULCert         Boolean
  preference     Int
  description    String?
  tag         PartTags[]
  image          String?
  Manufacturer   Manufacturer @relation(fields: [manufacturerId], references: [id])
  manufacturerId String

  @@unique([manufacturerId, partNumber])
}

model PartTags {
  id             Int        @id @default(autoincrement())
  name           PartTag
  manufacturerParts ManufacturerPart[]
}

model Manufacturer {
  id                String             @id @default(cuid())
  createdAt         DateTime           @default(now())
  updatedAt         DateTime           @updatedAt
  name              String             @unique
  manufacturerParts ManufacturerPart[]
}

enum PartType {
  Misc
  Cable
  Card
  PowerSupply
  EthernetSwitch
  SelectorSwitch
  PushButton
  CircuitBreaker
  IO
  Transformer
  Disconnect
  Fuse
  Wire
  Fastener
  Relay
  Light
  Enclosure
  Contactor
  Guarding
  Receptacle
  Wireway
  Terminals
}

enum PartTag {
  ControlLogix
  GuardLogix
  CompactLogix
  NX
  Ethernet
}
